trigger:
  branches:
    include:
    - '*'
  tags:
    include:
    - '*'

jobs:
  - job: Linux
    displayName: Build & Test Linux
    pool: 
      vmImage: 'ubuntu-latest'
    variables:
      buildConfiguration: 'Release'
      artifactsFolder: '$(Build.SourcesDirectory)/artifacts/'

    steps:
    - script: sudo apt-get install clang zlib1g-dev libkrb5-dev libtinfo5 -y
      displayName: Install requirements
      
    - task: UseDotNet@2
      displayName: "Use .NET 3.x"
      inputs:
        version: '3.x'
        packageType: sdk
    
    - powershell: dotnet publish ./src/TRH/TRH.csproj -c $(buildConfiguration) -r linux-x64 -o $(artifactsFolder)
      displayName: 'Build'

    - powershell: mv TRH trh
      displayName: Rename artifact
      workingDirectory: '$(artifactsFolder)'

    - powershell: strip trh
      displayName: Strip artifact
      workingDirectory: '$(artifactsFolder)'

    - powershell: dotnet test
      displayName: Test

    - task: PublishBuildArtifacts@1
      displayName: Publish
      inputs:
        pathtoPublish: '$(artifactsFolder)'
        artifactName: trhLin

  - job: Windows
    displayName: Build & Test Windows
    pool: 
      vmImage: 'windows-latest'
    variables:
      buildConfiguration: 'Release'
      artifactsFolder: '$(Build.SourcesDirectory)/artifacts/'

    steps:
    - task: UseDotNet@2
      displayName: "Use .NET 3.x"
      inputs:
        version: '3.x'
        packageType: sdk
    
    - powershell: dotnet publish ./src/TRH/TRH.csproj -c $(buildConfiguration) -r win-x64 -o $(artifactsFolder)
      displayName: 'Build'

    - powershell: mv TRH.exe trh.exe
      displayName: Rename artifact
      workingDirectory: '$(artifactsFolder)'

    - powershell: dotnet test
      displayName: Test

    - task: PublishBuildArtifacts@1
      displayName: Publish
      inputs:
        pathtoPublish: '$(artifactsFolder)'
        artifactName: trhWin


  - job: Release
    dependsOn:
    - Linux
    - Windows

    pool:
      vmImage: 'windows-latest'

    steps:
      - task: DownloadBuildArtifacts@0
        displayName: Download Linux executable
        inputs:
          buildType: 'current'
          downloadType: 'single'
          artifactName: 'trh'
          downloadPath: '$(System.ArtifactsDirectory)'
      
      - task: DownloadBuildArtifacts@0
        displayName: Download Windows executable
        inputs:
          buildType: 'current'
          downloadType: 'single'
          artifactName: 'trhWi'
          downloadPath: '$(System.ArtifactsDirectory)'

      - task: GitHubRelease@0
        displayName: GitHub Release
        condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
        inputs:
          gitHubConnection: 'GDATASoftwareAG'
          repositoryName: 'GDATASoftwareAG/TypeRefHasher'
          title: 'TypeRefHasher Release'
          addChangeLog: false
          assets: |
            $(System.ArtifactsDirectory)\trhLin\*
            $(System.ArtifactsDirectory)\trhWin\*.exe